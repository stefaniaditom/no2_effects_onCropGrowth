# this.year<-2019
dat <- df %>% filter(CNTRY_NAME==this.country) %>% filter(year_gws==this.year)
# print(dim(dat))
if(nrow(dat)>1){
for (this.vi in vi_vars){
# this.vi<-"NDVI_max"
print(paste0(this.country," ",this.year," ",this.vi))
linform_fe = as.formula(paste0(this.vi,control_form))
# print(linform_fe)
linmod_fe = feols(linform_fe,data=dat)
# print(linmod_fe)
no2cf = unname(linmod_fe$coefficients['NO2']) ##(linmod_fe$coeftable)['NO2','Estimate']
no2stdErr = unname(summary(linmod_fe, se = "cluster")$se['NO2'])
no2pval = (summary(linmod_fe)$coeftable)['NO2','Pr(>|t|)']
# print(no2cf)
# print(no2stdErr)
# print(no2pval)
ci = confint(linmod_fe, 'NO2', level=0.95) # adding 95% Confidence Interval
no2CI_2.5 = unname(unlist(ci[1]))
no2CI_97.5 = unname(unlist(ci[2]))
# save NO2 average and 5th percentile
NO2avg <- dat$NO2 %>% mean(na.rm = TRUE)
NO2p05 <- quantile(dat$NO2, 0.05)
greennVarAvg<- dat[[this.vi]] %>% mean(na.rm = TRUE)
#save number of points used in the regression after all the filtering
Npoints <- nrow(dat)
DF[i, ] <- list(this.country,crop_vars , this.year, this.vi, this.regime,
no2cf, no2pval, no2stdErr, no2CI_2.5,no2CI_97.5,
NO2avg, NO2p05, Npoints, greennVarAvg,
weath_control, o3_control
# O3avg, ratioavg, O3tropavg,# NO2sd, O3sd, ratiosd, O3tropsd,monthlyRatioAvg,
)
i<-i+1
}
}else{
print(paste0(this.country," ",this.year," ####   EMPTY DF   ####"))
# print('#################   EMPTY DF   ##################################')
}
}
}
DF <- DF %>% drop_na(CNTRY_NAME)
DF$signif <- ifelse(DF$NO2pval < 0.05, '< 0.05', '>= 0.05')
DF<- DF %>% group_by(CNTRY_NAME,year_gws,greenness_var) %>% mutate(NpointsPerc = Npoints/sum(Npoints)) #to check if works for multiple regimes
return(DF)
}
outSplit.maize_overall<- process.overall(df_maize, TRUE)
outSplit.wheat_overall <- process.overall(df_wheat, TRUE)
outSplit.rice_overall <- process.overall(df_rice, TRUE)
# Add rice?
outSplit.overall<-rbind(outSplit.maize_overall,outSplit.wheat_overall,outSplit.rice_overall)
outSplit.overall<- outSplit.overall %>% mutate(country_year = paste0(CNTRY_NAME,year_gws))
# Make zeros print as "0" always
prettyZero <- function(l){
max.decimals = max(nchar(str_extract(l, "\\.[0-9]+")), na.rm = T)-1
lnew = formatC(l, replace.zero = T, zero.print = "0",
digits = max.decimals, format = "f", preserve.width=T)
return(lnew)
}
plot_NO2coeffs_v2<-function(Dataframe,vi,shapes,fname){
# # Dataframe<-outAll.overall
Dataframe$crop[Dataframe$crop=='maize'] <- 'summer'
Dataframe$crop[Dataframe$crop=='wheat'] <- 'winter'
Dataframe$crop[Dataframe$crop=='rice'] <- 'rice'
# Dataframe<- Dataframe %>% mutate(country_crop = paste0(CNTRY_NAME,'_',crop))
Dataframe<-Dataframe %>%filter(greenness_var==vi)
Dataframe<-Dataframe %>%filter(NpointsPerc>0.01)
ggplot(data = Dataframe, mapping = aes(x = NO2coef, y = c(country_year)))+
geom_point(aes(colour=crop, size=NpointsPerc, shape=signif),alpha=1,stroke = 2)+
# geom_point(aes(fill=CNTRY_NAME, colour=signif, size=NpointsPerc, shape=regime),alpha=0.4,stroke=1)+
geom_errorbar(aes(xmin=NO2coef-no2stdErr, xmax=NO2coef+no2stdErr), width=.0002)+
# facet_wrap(facets = vars(crop),labeller=as_labeller(crop_names))+#, scales = "free_x")
ylab(NULL)+
xlab(expression(NO[2]~coefficient))+
geom_vline(xintercept=0,color="grey")+
# ggtitle(paste0("1/2d FE - ",
#                vi,
#                ' - Weath:',unique(Dataframe$weath_control),
#                '- O3:',unique(Dataframe$o3_control)
# )
# )+
# coord_cartesian(xlim = c(-0.0035, 0.0035))+
scale_x_continuous(labels = prettyZero)+
# theme(panel.spacing.x = unit(4, "mm"))+
guides(size=FALSE,colour = guide_legend(order = 1),
shape = guide_legend(order = 2))+# get rid of Npoints legend
# guides(fill=FALSE)+# get rid of Country_name legend
labs(shape="p-value",colour="season")+
# scale_shape_manual(values=shapes)+
scale_shape_manual(values=c(16,1))+ # shapes need to be from21-25 to have a fill and color property
# scale_colour_manual(values=c("goldenrod2", "royalblue1"))+ # Maize and wheat
scale_colour_manual(values=c("red","goldenrod2", "royalblue1")) # if adding RICE
# theme(legend.position=c(.9,.5))
# labs(x=expression(Production~rate~" "~mu~moles~NO[3]^{-1}-N~Kg^{-1}),
#      y=expression(Concentration~mg~L^{-1}))
# ggsave(
#   fname,
#   plot = last_plot(),
#   device = "png",
#   path = here("figs"),
#   scale = 1,
#   width = 18,
#   height = 7,
#   units = "cm",
#   dpi = 200,
#   limitsize = TRUE
# )
}
plot_NO2coeffs_v2(outSplit.overall,'NIRv_max',c(16),"figXXX.png")
rm(list=ls())
library(fixest)
require(tidyverse)
library(here)
library("data.table")
library(ggridges)
library(sjPlot)
here()
df_maize<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_maize_allvars_allCountries_filteredpoints.csv"))
df_wheat<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_wheat_allvars_allCountries_filteredpoints.csv"))
df_rice <-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_ricet_allvars_allCountries_filteredpoints.csv"))
process.overall <- function(df, weath_control){
if(weath_control==TRUE){
control_form = " ~ pr_early + pr_early_squared + pr_late + pr_late_squared + vpd + NO2 | cell_geomid + year_gws"
}else if(weath_control==FALSE){
control_form = " ~ NO2 | cell_geomid + year_gws"
}
this.regime <- "overall"
o3_control <-FALSE
#Create empty DF
N <- 100  # total number of rows to preallocate
DF <- data.frame(CNTRY_NAME=rep(NA, N), crop=rep(NA, N), year_gws=rep(NA, N), greenness_var=rep(NA, N), regime=rep(NA, N),
NO2coef=rep(NA, N), NO2pval=rep(NA, N), no2stdErr=rep(NA, N), no2CI_2.5 = rep(NA, N), no2CI_97.5 = rep(NA, N),
NO2avg=rep(NA, N), NO2p05=rep(NA, N),Npoints=rep(NA, N),
greennVarAvg = rep(NA, N),
weath_control=rep(NA, N), o3_control=rep(NA, N),
stringsAsFactors=FALSE)
country_vars <- as.character(df$CNTRY_NAME) %>% unique()
crop_vars <- as.character(df$crop) %>% unique()
vi_vars <- c('NDVI_max','NIRv_max')
i<-1
for (this.country in country_vars){
dat <- df %>% filter(CNTRY_NAME==this.country)
allyears<-paste(dat$year_gws %>% unique(), collapse = '-')
if(nrow(dat)>1){
for (this.vi in vi_vars){
print(paste0(this.country," ",this.vi))
linform_fe = as.formula(paste0(this.vi,control_form))
linmod_fe = feols(linform_fe,data=dat)
no2cf = unname(linmod_fe$coefficients['NO2'])
no2stdErr = unname(summary(linmod_fe, se = "cluster")$se['NO2'])
no2pval = (summary(linmod_fe)$coeftable)['NO2','Pr(>|t|)']
ci = confint(linmod_fe, 'NO2', level=0.95) # adding 95% Confidence Interval
no2CI_2.5 = unname(unlist(ci[1]))
no2CI_97.5 = unname(unlist(ci[2]))
# save NO2 average and 5th percentile
NO2avg <- dat$NO2 %>% mean(na.rm = TRUE)
NO2p05 <- quantile(dat$NO2, 0.05)
greennVarAvg<- dat[[this.vi]] %>% mean(na.rm = TRUE)
#save number of points used in the regression after all the filtering
Npoints <- nrow(dat)
DF[i, ] <- list(this.country, crop_vars, allyears, this.vi, this.regime,
no2cf, no2pval, no2stdErr, no2CI_2.5,no2CI_97.5,
NO2avg, NO2p05, Npoints, greennVarAvg,
weath_control, o3_control
)
i<-i+1
}
}else{
print(paste0(this.country," ",this.year," ####   EMPTY DF   ####"))
}
}
DF <- DF %>% drop_na(CNTRY_NAME)
DF$signif <- ifelse(DF$NO2pval < 0.05, '< 0.05', '>= 0.05')
DF<- DF %>% group_by(CNTRY_NAME,greenness_var) %>% mutate(NpointsPerc = Npoints/sum(Npoints))
return(DF)
}
df_maize$cell_cropArea %>%max()
df_rice$cell_cropArea %>%max()
ths = seq(0, 2900000000, by=500000000)
datalist_overall = list()
for (i in 1:length(ths)){
th <-ths[i]
print(th)
df_maize_sub<-df_maize %>% filter(cell_cropArea>=th)
df_wheat_sub<-df_wheat %>% filter(cell_cropArea>=th)
outAll.maize_overall<- process.overall(df_maize_sub, TRUE)
outAll.maize_overall$th <- th
outAll.wheat_overall <- process.overall(df_wheat_sub, TRUE)
outAll.wheat_overall$th <- th
# only maize and wheat
outAll.overall_temp<-rbind(outAll.maize_overall, outAll.wheat_overall)
outAll.overall_temp$i <- i
datalist_overall[[i]] <- outAll.overall_temp
}
outAll.overall = do.call(rbind, datalist_overall)
# Make zeros print as "0" always
prettyZero <- function(l){
max.decimals = max(nchar(str_extract(l, "\\.[0-9]+")), na.rm = T)-1
lnew = formatC(l, replace.zero = T, zero.print = "0",
digits = max.decimals, format = "f", preserve.width=T)
return(lnew)
}
crop_names <- c(
"maize" = "summer crop",
"wheat" = "winter crop",
"rice" = "rice summer crop"
)
plot_NO2coeffs_vs_th<-function(Dataframe,vi,shapes,fname){
# Dataframe<-outAll.overall
Dataframe$crop[Dataframe$crop=='maize'] <- 'summer'
Dataframe$crop[Dataframe$crop=='wheat'] <- 'winter'
Dataframe$crop[Dataframe$crop=='rice'] <- 'rice'
# Dataframe<- Dataframe %>% mutate(country_crop = paste0(CNTRY_NAME,'_',crop))
Dataframe<-Dataframe %>%filter(greenness_var==vi)
Dataframe<-Dataframe %>%filter(NpointsPerc>0.01)
# to sort y-axis label from China to W Europe alphabetically
# Dataframe<- Dataframe%>%mutate(CNTRY_NAME=factor(CNTRY_NAME, levels = c("WEurope", "United States", "SAmerica","India","China")))
Dataframe<- Dataframe%>%mutate(CNTRY_NAME=factor(CNTRY_NAME, levels = c("Western Europe", "United States", "South America","India","China")))
# class(Dataframe$CNTRY_NAME)
ggplot(data = Dataframe, mapping = aes(x = NO2coef, y = th))+
geom_point(aes(colour=crop, size=NpointsPerc, shape=signif),alpha=1,stroke = 2)+
# geom_point(aes(fill=CNTRY_NAME, colour=signif, size=NpointsPerc, shape=regime),alpha=0.4,stroke=1)+
# geom_errorbar(aes(xmin=NO2coef-no2stdErr, xmax=NO2coef+no2stdErr), width=.0002)+
geom_errorbar(aes(xmin=no2CI_2.5, xmax=no2CI_97.5), width=.0002)+ # using 95% CI
facet_grid(vars(CNTRY_NAME))+#, scales = "free_x")
ylab('crop area threshold (m2/gridcell)')+
# ylab(expression(~crop area ~ m[2]))+
xlab(expression(NO[2]~coefficient))+
geom_vline(xintercept=0,color="grey")+
# coord_cartesian(xlim = c(-0.0035, 0.001))+
coord_cartesian(ylim = c(-300000000, 2700000000))+
scale_x_continuous(labels = prettyZero)+
# scale_y_continuous(labels = prettyZero)+
# # theme(panel.spacing.x = unit(4, "mm"))+
guides(size=FALSE,
colour = guide_legend(order = 1,reverse=TRUE),
shape = guide_legend(order = 2)
)+# get rid of Npoints legend
# colour = guide_legend(reverse=TRUE))+ #reverse order legend: first winter then summer
#
# # guides(fill=FALSE)+# get rid of Country_name legend
labs(shape="p-value",colour="season")+
# # scale_shape_manual(values=shapes)+
scale_shape_manual(values=c(16,1))+ # shapes need to be from21-25 to have a fill and color property
scale_colour_manual(values=c("goldenrod2", "royalblue1"))+ # Maize and wheat
theme_bw()
ggsave(
fname,
plot = last_plot(),
device = "png",
# path = here("figs","fig3_temp"),
path = here("figs"),
scale = 1,
width = 12,
height = 15,
units = "cm",
dpi = 600,
limitsize = TRUE
)
}
plot_NO2coeffs_vs_th(outAll.overall,'NIRv_max',c(16),"S3_no2coeff_vs_cropAreaTh.png")
plot_Npoints_vs_th<-function(Dataframe,vi,shapes,fname){
# Dataframe<-outAll.overall
Dataframe$crop[Dataframe$crop=='maize'] <- 'summer'
Dataframe$crop[Dataframe$crop=='wheat'] <- 'winter'
Dataframe$crop[Dataframe$crop=='rice'] <- 'rice'
# Dataframe<- Dataframe %>% mutate(country_crop = paste0(CNTRY_NAME,'_',crop))
Dataframe<-Dataframe %>%filter(greenness_var==vi)
Dataframe<-Dataframe %>%filter(NpointsPerc>0.01)
# to sort y-axis label from China to W Europe alphabetically
# Dataframe<- Dataframe%>%mutate(CNTRY_NAME=factor(CNTRY_NAME, levels = c("WEurope", "United States", "SAmerica","India","China")))
Dataframe<- Dataframe%>%mutate(CNTRY_NAME=factor(CNTRY_NAME, levels = c("Western Europe", "United States", "South America","India","China")))
# class(Dataframe$CNTRY_NAME)
ggplot(data = Dataframe, mapping = aes(x = Npoints, y = th))+
geom_point(aes(colour=crop, size=NpointsPerc, shape=signif),alpha=1,stroke = 2)+
# geom_point(aes(fill=CNTRY_NAME, colour=signif, size=NpointsPerc, shape=regime),alpha=0.4,stroke=1)+
# geom_errorbar(aes(xmin=NO2coef-no2stdErr, xmax=NO2coef+no2stdErr), width=.0002)+
facet_grid(vars(CNTRY_NAME))+#, scales = "free_x")
# ylab('crop Area threshold')+
ylab('crop area threshold (m2/gridcell)')+
xlab('Number of points')+
geom_vline(xintercept=0,color="grey")+
# coord_cartesian(xlim = c(-0.0035, 0.001))+
coord_cartesian(ylim = c(-300000000, 2700000000))+
# scale_x_continuous(labels = prettyZero)+
# scale_y_continuous(labels = prettyZero)+
# # theme(panel.spacing.x = unit(4, "mm"))+
guides(size=FALSE,
colour = guide_legend(order = 1,reverse=TRUE),
shape = guide_legend(order = 2)
)+# get rid of Npoints legend
# colour = guide_legend(reverse=TRUE))+ #reverse order legend: first winter then summer
#
# # guides(fill=FALSE)+# get rid of Country_name legend
labs(shape="p-value",colour="season")+
# # scale_shape_manual(values=shapes)+
scale_shape_manual(values=c(16,1))+ # shapes need to be from21-25 to have a fill and color property
scale_colour_manual(values=c("goldenrod2", "royalblue1"))+ # Maize and wheat
theme_bw()
ggsave(
fname,
plot = last_plot(),
device = "png",
# path = here("figs","fig3_temp"),
path = here("figs"),
scale = 1,
width = 12,
height = 15,
units = "cm",
dpi = 600,
limitsize = TRUE
)
}
plot_Npoints_vs_th(outAll.overall,'NIRv_max',c(16),"S3_npoints_vs_cropAreaTh.png")
rm(list=ls())
library(fixest)
require(tidyverse)
library(here)
library("data.table")
library(ggridges)
library(sjPlot)
here()
df_maize<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_maize_allvars_allCountries_filteredpoints.csv"))
df_wheat<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_wheat_allvars_allCountries_filteredpoints.csv"))
df_rice <-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_ricet_allvars_allCountries_filteredpoints.csv"))
process.overall <- function(df, weath_control){
if(weath_control==TRUE){
control_form = " ~ pr_early + pr_early_squared + pr_late + pr_late_squared + vpd + NO2 + AOD_055| cell_geomid + year_gws"
}else if(weath_control==FALSE){
control_form = " ~ NO2 | cell_geomid + year_gws"
}
this.regime <- "overall"
o3_control <-FALSE
#Create empty DF
N <- 100  # total number of rows to preallocate
DF <- data.frame(CNTRY_NAME=rep(NA, N), crop=rep(NA, N), year_gws=rep(NA, N), greenness_var=rep(NA, N), regime=rep(NA, N),
NO2coef=rep(NA, N), NO2pval=rep(NA, N), no2stdErr=rep(NA, N), no2CI_2.5 = rep(NA, N), no2CI_97.5 = rep(NA, N),
NO2avg=rep(NA, N), NO2p05=rep(NA, N),Npoints=rep(NA, N),
greennVarAvg = rep(NA, N),
weath_control=rep(NA, N), o3_control=rep(NA, N),
stringsAsFactors=FALSE)
country_vars <- as.character(df$CNTRY_NAME) %>% unique()
crop_vars <- as.character(df$crop) %>% unique()
vi_vars <- c('NDVI_max','NIRv_max')
i<-1
for (this.country in country_vars){
dat <- df %>% filter(CNTRY_NAME==this.country)
allyears<-paste(dat$year_gws %>% unique(), collapse = '-')
if(nrow(dat)>1){
for (this.vi in vi_vars){
print(paste0(this.country," ",this.vi))
linform_fe = as.formula(paste0(this.vi,control_form))
linmod_fe = feols(linform_fe,data=dat)
no2cf = unname(linmod_fe$coefficients['NO2'])
no2stdErr = unname(summary(linmod_fe, se = "cluster")$se['NO2'])
no2pval = (summary(linmod_fe)$coeftable)['NO2','Pr(>|t|)']
ci = confint(linmod_fe, 'NO2', level=0.95) # adding 95% Confidence Interval
no2CI_2.5 = unname(unlist(ci[1]))
no2CI_97.5 = unname(unlist(ci[2]))
# save NO2 average and 5th percentile
NO2avg <- dat$NO2 %>% mean(na.rm = TRUE)
NO2p05 <- quantile(dat$NO2, 0.05)
greennVarAvg<- dat[[this.vi]] %>% mean(na.rm = TRUE)
#save number of points used in the regression after all the filtering
Npoints <- nrow(dat)
DF[i, ] <- list(this.country, crop_vars, allyears, this.vi, this.regime,
no2cf, no2pval, no2stdErr,no2CI_2.5,no2CI_97.5,
NO2avg, NO2p05, Npoints, greennVarAvg,
weath_control, o3_control
)
i<-i+1
}
}else{
print(paste0(this.country," ",this.year," ####   EMPTY DF   ####"))
}
}
DF <- DF %>% drop_na(CNTRY_NAME)
DF$signif <- ifelse(DF$NO2pval < 0.05, '< 0.05', '>= 0.05')
DF<- DF %>% group_by(CNTRY_NAME,greenness_var) %>% mutate(NpointsPerc = Npoints/sum(Npoints))
return(DF)
}
outAll.maize_overall<- process.overall(df_maize, TRUE)
outAll.wheat_overall <- process.overall(df_wheat, TRUE)
outAll.rice_overall <- process.overall(df_rice, TRUE)
# only maize and wheat
outAll.overall<-rbind(outAll.maize_overall, outAll.wheat_overall)
# Make zeros print as "0" always
prettyZero <- function(l){
max.decimals = max(nchar(str_extract(l, "\\.[0-9]+")), na.rm = T)-1
lnew = formatC(l, replace.zero = T, zero.print = "0",
digits = max.decimals, format = "f", preserve.width=T)
return(lnew)
}
crop_names <- c(
"maize" = "summer crop",
"wheat" = "winter crop",
"rice" = "rice summer crop"
)
plot_NO2coeffs_v2<-function(Dataframe,vi,shapes,fname){
Dataframe$crop[Dataframe$crop=='maize'] <- 'summer'
Dataframe$crop[Dataframe$crop=='wheat'] <- 'winter'
Dataframe$crop[Dataframe$crop=='rice'] <- 'rice'
Dataframe<-Dataframe %>%filter(greenness_var==vi)
Dataframe<-Dataframe %>%filter(NpointsPerc>0.01)
Dataframe<- Dataframe%>%mutate(CNTRY_NAME=factor(CNTRY_NAME, levels = c("Western Europe", "United States", "South America","India","China")))
ggplot(data = Dataframe, mapping = aes(x = NO2coef, y = CNTRY_NAME))+
geom_point(aes(colour=crop, size=NpointsPerc, shape=signif),alpha=1,stroke = 2)+
geom_errorbar(aes(xmin=no2CI_2.5, xmax=no2CI_97.5), width=.0002)+ # using 95% CI
ylab(NULL)+
xlab(expression(NO[2]~coefficient))+
geom_vline(xintercept=0,color="grey")+
scale_x_continuous(labels = prettyZero)+
guides(size=FALSE,
colour = guide_legend(order = 1,reverse=TRUE),
shape = guide_legend(order = 2)
)+
labs(shape="p-value",colour="season")+
scale_shape_manual(values=c(16,1))+
scale_colour_manual(values=c("goldenrod2", "royalblue1"))+
theme_bw()
ggsave(
fname,
plot = last_plot(),
device = "png",
path = here("figs"),
scale = 1,
width = 18,
height = 6,
units = "cm",
dpi = 200,
limitsize = TRUE
)
}
plot_NO2coeffs_v2(outAll.overall,'NIRv_max',c(16),"figS2_No2coeffAllyears_wAerosolControl.png")
rm(list=ls())
library(fixest)
require(tidyverse)
library(here)
library("data.table")
library(sjPlot)
here()
df_maize<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_maize_allvars_allCountries_filteredpoints.csv"))
df_wheat<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_wheat_allvars_allCountries_filteredpoints.csv"))
df_rice <-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_ricet_allvars_allCountries_filteredpoints.csv"))
# merge all files
df_raw <- bind_rows(list(df_maize,df_wheat,df_rice))
# info for Table S2 in paper: Number of points per Region/Season
df_raw %>%group_by(CNTRY_NAME,crop)%>% summarise(n = n())
# info for Table S2 in paper: number of years per region/season
table_w_years_used<-df_raw %>%group_by(CNTRY_NAME,crop, year_gws)%>% summarise(n = n())
rm(list=ls())
library(fixest)
require(tidyverse)
library(here)
# library("data.table")
# library(ggridges) # for geom_density_ridges
library(sjPlot)
here()
#Alebdo only for maize point exported (for now)
df_maize<-read.csv(here("data","final_allvars_dfs_filteredModisPeak","samples100kUSA_maize_allvars_allCountries_filteredpoints.csv"))
saveR2 <- function(df){
#Create empty DF
N <- 20
DF <- data.frame(CNTRY_NAME=rep(NA, N), crop=rep(NA, N), year_gws=rep(NA, N), greenness_var=rep(NA, N),
Adjusted.R2_NIRv_vs_albedo=rep(NA, N), Within.R2_NIRv_vs_albedo=rep(NA, N),
Adjusted.R2_NIRv_vs_NO2=rep(NA, N), Within.R2_NIRv_vs_NO2=rep(NA, N),
stringsAsFactors=FALSE)
country_vars <- as.character(df$CNTRY_NAME) %>% unique()
# year_vars <- df$year_gws %>% unique()
crop_vars <- as.character(df$crop) %>% unique()
this.vi <- 'NIRv_max'
i<-1
for (this.country in country_vars){
print(this.country)
# for (this.year in year_vars){
dat <- df %>% filter(CNTRY_NAME==this.country)
allyears<-paste(dat$year_gws %>% unique(), collapse = '-')
if(nrow(dat)>1){
# linform_fe = as.formula('NIRv_max ~ OMLER440nm| LL_grid') # if subseting for 1 year , 2019 no need year FE-
linform_fe = as.formula('NIRv_max ~ OMLER440nm| cell_geomid + year_gws')# need to add year FE if using all years?
linmod_fe = feols(linform_fe,data=dat)
# print(linmod_fe)
ar2_NIRv_vs_albedo <- r2(linmod_fe, type = "ar2",full_names=TRUE)#Adjusted R2
wr2_NIRv_vs_albedo <- r2(linmod_fe, type = "wr2",full_names=TRUE)#Within R2
# print('-------------------------------------------------------------')
# linform_fe = as.formula('OMLER440nm ~ NO2| LL_grid')
# linmod_fe = feols(linform_fe,data=dat)
# print(linmod_fe)
# print('-------------------------------------------------------------')
#
# linform_fe2 = as.formula('NIRv_max ~ NO2| LL_grid')
linform_fe2 = as.formula('NIRv_max ~ NO2| cell_geomid + year_gws')
linmod_fe2 = feols(linform_fe2,data=dat)
# print(linmod_fe2)
ar2_NIRv_vs_NO2 <- r2(linmod_fe2, type = "ar2",full_names=TRUE)#Adjusted R2
wr2_NIRv_vs_NO2 <- r2(linmod_fe2, type = "wr2",full_names=TRUE)#Within R2
# print('-------------------------------------------------------------')
DF[i, ] <- list(this.country, crop_vars, allyears, this.vi,
ar2_NIRv_vs_albedo, wr2_NIRv_vs_albedo,
ar2_NIRv_vs_NO2,    wr2_NIRv_vs_NO2
)
i<-i+1
}else{
print(paste0(this.country," ",this.year," ####   EMPTY DF   ####"))
# print('#################   EMPTY DF   ##################################')
}
}# close country loop
DF <- DF %>% drop_na(CNTRY_NAME)
return(DF)
}
DF_withR2<-saveR2(df_maize)
DF_withR2
View(DF_withR2)
